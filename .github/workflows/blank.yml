import tkinter as tk
import random
import csv

W_FILE = "ФЗ.csv"

def load_words():
    words = {}
    try:
        with open(W_FILE, "r") as file:
            reader = csv.reader(file)
            words = {row[0]: row[1] for row in reader if len(row) == 2}
    except FileNotFoundError:
        words = {"apple": "яблоко", "dog": "собака", "sun": "солнце", "cat": "кошка", "cild": "ребенок"}
        save_words(words)
    return words

def save_words(words):
    with open(W_FILE, "w", encoding="utf-8", newline="") as file:
        writer = csv.writer(file)
        for word, translation in words.items():
            writer.writerow([word, translation])

class LanguageApp:
    def __init__(self, root):
        self.root = root
        self.words = load_words()
        self.current_word = ""
        
        self.word_label = tk.Label(root, text="Нажмите 'Старт' для начала", font=("Arial", 14))
        self.word_label.pack(pady=20)
        
        self.entry = tk.Entry(root, font=("Arial", 14))
        self.entry.pack(pady=10)
        
        self.check_button = tk.Button(root, text="Проверить", command=self.check_answer)
        self.check_button.pack(pady=5)
        
        self.start_button = tk.Button(root, text="Старт или Дальше", command=self.next_word)
        self.start_button.pack(pady=5)
        
        self.feedback_label = tk.Label(root, text="", font=("Arial", 12))
        self.feedback_label.pack(pady=10)
    
    def next_word(self):
        self.current_word = random.choice(list(self.words.keys()))
        self.word_label.config(text=f"Переведите: {self.current_word}")
        self.entry.delete(0, tk.END)
        self.feedback_label.config(text="")
    
    def check_answer(self):
        user_answer = self.entry.get().strip().lower()
        correct_answer = self.words[self.current_word].lower()
        if user_answer == correct_answer:
            self.feedback_label.config(text="Верно!", fg="green")
        else:
            self.feedback_label.config(text=f"Ошибка! Правильный ответ: {correct_answer}", fg="red")

if __name__ == "__main__":
    root = tk.Tk()
    app = LanguageApp(root)
    root.mainloop()
